{
  "@constants": {
    "cardDrawValue": 2,
    "uninkableBurdenMultiplier": 0.15,
    "selfBanishBurden": 1.1,
    "discardBurden": 1.5,
    "dqi": {
      "perCardLookedAt": 1,
      "filterToBottom": 1,
      "tutorToHand": 2.5,
      "tutorBonus": 0.8,
      "tutorBonusValue": 2.75
    },
    "lvi": {
      "wardModifier": 1.4,
      "resistModifier": 1.2,
      "highWillpowerThreshold": 6,
      "highWillpowerModifier": 1.1,
      "evasiveModifier": 1.5,
      "itemSurvivability": 3,
      "readyCharacterValue": 1.6,
      "directLoreGainMultiplier": 1.5,
      "specialLoreGainMultiplier": 5,
      "healValueMultiplier": 1,
      "grantWardAuraValue": 1.5
    },
    "bcr": {
      "rushStrengthMultiplier": 0.5,
      "singerValueMultiplier": 1,
      "statBuffMultiplier": 1.5,
      "grantKeywordAuraValue": 1.5,
      "banishCharacterValue": 7,
      "banishItemValue": 4,
      "banishLocationValue": 3
    },
    "cev": {
      "baseMultiplier": 1,
      "triggerReliability": {
        "OnPlay": 1,
        "OnQuest": 0.65,
        "Other": 0.5
      }
    }
  },
  "abilities": [
    {
      "name": "Trigger: Draw Card",
      "category": "Trigger",
      "sub_type": "Draw",
      "regex": "/when(?:ever)? you draw (an?|one|two|three|\\d+)\\s*(?:character|item|action|song|location)?\\s+cards?/gi",
      "explanation": "This is a common trigger and can be achieved easily if played correctly",
      "justification": "Trigger: Draw Card -> can be easy to achieve but requires setup",
      "calculation": {
        "variables": [
          {
            "name": "cardAmount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "cardAmount * 0.8"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: Character Challenges",
      "category": "Trigger",
      "sub_type": "Challenge",
      "regex": "/Whenever one of your characters challenges/gi",
      "explanation": "This is a condition that is easy to meet, but exposes the character and deals damage. so it's not a massive win",
      "justification": "Trigger: On of your Character Challenges -> Easy to trigger but downsides for the character that challenges",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "0.8"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Condition",
      "category": "Opponent",
      "sub_type": "Exerted",
      "regex": "/if an opponent has an exerted character in play/gi",
      "explanation": "This is likely but can be played around",
      "justification": "This is likely but should essentially penalise other triggers like on play",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "0.75"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: During Your Turn",
      "category": "Trigger",
      "sub_type": "Turn",
      "regex": "/during your turn/gi",
      "explanation": "This is a recurring trigger that can be activated at any point during your turn. It implies a high degree of control for the player but requires the character to survive until your turn begins.",
      "justification": "Trigger: During Your Turn -> Proactive and fully controllable by you.",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.9"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Condition: Has No Damage",
      "category": "Condition",
      "sub_type": "Damage",
      "regex": "/(?:if|while) (?:this character|it|he|she) has no damage/gi",
      "explanation": "Having no damage can be powerful as both when you play and with synergies of removal of damage",
      "justification": "Guaranteed on play, with high potential to be recurring",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.75"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: Start Turn",
      "category": "Trigger",
      "sub_type": "Turn",
      "regex": "/At the start of your turn/gi",
      "explanation": "This is a recurring trigger, but it also means that the card that has it has to survive at least until the next turn.",
      "justification": "Trigger: Start of Turn - Requires surviving one turn, and you don't control the timing",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.1"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: Remove Damage",
      "category": "Trigger",
      "sub_type": "Damage",
      "regex": "/Whenever you remove (\\d+) (or more )?damage/gi",
      "explanation": "Removing damage as a condition is specific",
      "justification": "Should provide a penalizing as by itself it's a hard condition to satisfy without other cards",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "lvi",
            "name": "trigger",
            "operation": "multiply",
            "value": "0.5"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "State: Ready Ink",
      "category": "State",
      "sub_type": "Inkwell",
      "regex": "/ready (\\d+|a|one|all) card(?:s)? in your inkwell/gi",
      "explanation": "Readying cards from your inkwell allows you to essentially \"play for free\"",
      "justification": "This ability effectively doubles your available ink for a turn, which is an incredibly powerful tempo swing.\n\nComparison to Standard Ramp: We established that a one-time effect of putting a single card into your inkwell (Hand to Inkwell) is worth +2.5. This is because it provides a permanent +1 ink advantage for every subsequent turn.\n\nValuing the Tempo Swing: \"Readying\" all your ink is not a permanent ramp, but a massive, repeatable burst of temporary ramp. If you quest on turn 5 with 5 ink in your inkwell, this ability gives you 5 extra ink to use that turn. This allows you to play a 5-cost card for essentially free. We've established that \"Play for Free\" effects are valued by the cost of the card being cheated.\n\nThe Value Proposition: A repeatable ability to generate ~5 ink's worth of tempo each turn is arguably more powerful than a one-time permanent ramp effect. Assigning it a value of +4.0 places it higher than our standard ramp ability (+2.5), correctly identifying it as one of the most powerful resource-generating abilities in the game. It is balanced by the fact that it is an \"On Quest\" trigger, which is less reliable than an \"On Play\" trigger.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "4",
            "explanation": "More than Ramp effect (should be similar to play for Free)"
          }
        }
      },
      "value_type": "net_advantage"
    },
    {
      "name": "Card Effect: Card from Inkwell to Hand",
      "category": "Resource",
      "sub_type": "Card Draw",
      "regex": "/return (one|a|\\d+) card(?:s)? (at random )?from your inkwell to your hand/gi",
      "explanation": "This is the reverse of our \"Ramp\" ability (Hand to Inkwell), which we valued at +2.5. The value is high because the effect is permanent and compounds over time.",
      "justification": "Losing a ramped resource is, therefore, a permanent penalty of equal magnitude. Losing two such resources is a massive drawback.\nDownside Value = -5.0 (2 * -2.5).",
      "calculation": {
        "variables": [
          {
            "name": "cardCount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "(cardCount * @cardDrawValue) + (cardCount * -2.5)"
          }
        }
      }
    },
    {
      "name": "Play: Sing Together Song",
      "category": "Play",
      "sub_type": "Song",
      "regex": "/Sing together (\\d+)/gi",
      "explanation": "Sing together allows more flexibility when singing as you can pool multiple characters to sing the song.",
      "justification": " It allows players to swarm the board with low-cost characters and still play high-impact songs, generating a massive tempo advantage that standard songs cannot match.",
      "calculation": {
        "variables": [
          {
            "name": "songValue",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "2.0",
            "explanation": "Higher impact than traditional songs"
          }
        }
      }
    },
    {
      "name": "Card Effect: Bottom of Opponents deck",
      "category": "Board Control",
      "sub_type": "Bottom Deck",
      "regex": "/bottom of (their|their opponent's|their players') deck/gi",
      "explanation": "Putting a card at the bottom of ",
      "justification": "",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "1.0",
            "explanation": "opposite of putting it on the bottom of your deck"
          }
        }
      }
    },
    {
      "name": "Bounce: Own Characters",
      "category": "Board Control",
      "sub_type": "Tempo",
      "regex": "/return (?:another )?(?:chosen |(\\d+) chosen )?character(?:s)? of yours to your hand/gi",
      "value_type": "raw",
      "explanation": "Technically a bad tempo ability, but normally comes as part as a combined play.",
      "justification": "Returning cards to your hand is negative tempo",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "-0.5",
            "explanation": "Negative Tempo"
          }
        }
      }
    },
    {
      "name": "Type: Action",
      "category": "Base",
      "sub_type": "Type",
      "regex": "WILL_NOT_MATCH_TEXT",
      "value_type": "raw",
      "explanation": "We treat this the same as having a charcter with an OnPlay Ability",
      "justification": "This ability will trigger reliably same as playing a character with that ability",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "rds",
            "name": "trigger",
            "operation": "multiply",
            "value": "2.0",
            "condition": "@card.type == 'Action'"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "State: Can't Challange",
      "category": "State",
      "sub_type": "Control",
      "regex": "/(chosen (opposing )?character(s)?) can't challenge/gi",
      "value_type": "raw",
      "explanation": "Narrow form of control",
      "justification": "Affects tempo - but characters can still quest",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "1.15",
            "explanation": "Affects tempo - but characters can still quest"
          }
        }
      }
    },
    {
      "name": "Card Effect: Put into hand",
      "category": "Resource",
      "sub_type": "Card Draw",
      "regex": "/put (\\d+|a|one|two|three|it)(?: card)?s? into your hand/gi",
      "value_type": "raw",
      "explanation": "Same as draw if you are putting into hand",
      "justification": "Card draw is the primary engine for resource advantage. (Put into Hand)",
      "calculation": {
        "variables": [
          {
            "name": "putCount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "putCount * @cardDrawValue * @context.rds.trigger",
            "explanation": "Draw (drawCount) * Card Draw Value (2.0) * Triggers",
            "condition": ""
          }
        }
      }
    },
    {
      "name": "Trigger: This Character Banishes",
      "category": "Trigger",
      "sub_type": "Your Character Banishes",
      "regex": "/When(?:ever)? (this character|he|she|it) banishes another character in a challenge/gi",
      "value_type": "raw",
      "explanation": "This abilitiy triggers on banishing another character in a challange",
      "justification": "Trigger: This Character Banishes -> conditional on actually banishing the character challenged",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.2"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: Banished in a Challenge (Self)",
      "category": "Trigger",
      "sub_type": "On Banish",
      "regex": "/When(?:ever)? (this character|he|she|it) is banished in a challenge/gi",
      "value_type": "raw",
      "explanation": "This ability triggers when this character is banished as a result of a challenge, either as the challenger or the one being challenged.",
      "justification": "Trigger: Banished in a Challenge -> More conditional than a simple 'On Banish' or 'Leaves Play' trigger because it requires combat. Its reliability is lower than being banished by any means, but it provides value from an otherwise negative board state event.",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "rds",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.35"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: On Challenge Start",
      "category": "Trigger",
      "sub_type": "On Challenge",
      "regex": "/Whenever (this character|he|she|it) challenges another character/gi",
      "value_type": "raw",
      "explanation": "This ability triggers when this character initiates a challenge against another character, regardless of the outcome.",
      "justification": "This is better than needing to banish the opposing character.",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.3"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: You Play an Card Type",
      "category": "Trigger",
      "sub_type": "Play Card Type",
      "regex": "/Whenever you play (?:an|a|another) (action|song|item|character|location)/gi",
      "value_type": "raw",
      "explanation": "This ability triggers whenever you play a card of a 'specific' type.",
      "justification": "Its reliability is conditional and therefore it should be a multiplier that reduces the reliability of whatever it's triggering",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "0.75"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Keyword: Shift (Normal)",
      "category": "Keyword",
      "sub_type": "Tempo",
      "regex": "/Shift (\\d+)/gi",
      "value_type": "net_advantage",
      "explanation": "Shifting is a core mechanic that helps increase your RDS but penalises your BCR as it removes the character you shifted onto",
      "justification": "you get to play a large character for less ink than it's cost The penalty for Shift is now explicitly defined as 50% of the cost of self-banishing.",
      "calculation": {
        "variables": [
          {
            "name": "shiftAmount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "@card.cost - shiftAmount",
            "explanation": "Card Cost - Shift Amount"
          },
          "board_control": {
            "value": "((@bcr.banishCharacterValue * -0.2) * 0.5)",
            "explanation": "penalizing the lack of board development"
          }
        }
      }
    },
    {
      "name": "Trigger: Leaves Play",
      "category": "Trigger",
      "sub_type": "Leaves Play",
      "regex": "/when(?:ever)? (?:they|he|she|it) leaves play/gi",
      "value_type": "raw",
      "explanation": "This trigger is the biggest catch-all since it means: Going back to hand, being banished, getting put into your inkwell etc..",
      "justification": "Trigger: Leave Play is quite a iron clad trigger that is on par to On Play Triggers as it is almost guaranteed",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.8"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Condition: For Each",
      "category": "Condition",
      "sub_type": "For Each",
      "regex": "/for each (?:other )?(?:\\w+ )?(item|character|location|action|song|(\\d+) damage|card)/gi",
      "value_type": "raw",
      "explanation": "Condition that might stack up substantially",
      "justification": "This is the basis for cards that whole decks are built around, high risk high reward",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "lvi",
            "name": "forEach",
            "operation": "multiply",
            "value": "1.5"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Stat: Lore Buff",
      "category": "Stat",
      "sub_type": "Buff",
      "regex": "/(?:all characters )?(?:get|gets|has|chosen character(?:s)?) \\+(\\d+) (◊|lore)/gi",
      "value_type": "raw",
      "explanation": "Characters Gain Lore buff as a result of this ability",
      "justification": "",
      "calculation": {
        "variables": [
          {
            "name": "loreAmount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "lore_velocity": {
            "value": "loreAmount",
            "explanation": "Lore Amount Buffed"
          }
        }
      }
    },
    {
      "name": "Base: Lore Potential",
      "category": "Base",
      "sub_type": "Stat",
      "regex": "WILL_NOT_MATCH_TEXT",
      "value_type": "raw",
      "explanation": "Fundamental LVI score derived from a character's printed lore, modified by its survivability and safety.",
      "justification": "This is the core calculation for LVI. It's defined as an ability so its formula can use the context modifiers created by other keywords.",
      "calculation": {
        "variables": [
          {
            "name": "baseLore",
            "source": "card.lore",
            "type": "numeric"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "lore_velocity": {
            "condition": "baseLore > 0",
            "value": "baseLore * @context.lvi.survivability * @context.lvi.questSafety",
            "explanation": "Card Lore with modifiers ->"
          }
        }
      }
    },
    {
      "name": "Base: Uninkable Burden",
      "category": "Base",
      "sub_type": "Penalty",
      "regex": "WILL_NOT_MATCH_TEXT",
      "value_type": "net_advantage",
      "explanation": "Applies a penalty to the RDS for cards that cannot be put into the inkwell.",
      "justification": "Uninkable cards can lead to inconsistent starts. The penalty scales with the card's cost.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "condition": "@card.inkwell == false",
            "value": "-( @card.cost * @uninkableBurdenMultiplier )",
            "explanation": "Uninkable Burden (- Cost * Multiplier)"
          }
        }
      }
    },
    {
      "name": "Base: High Willpower",
      "category": "Base",
      "sub_type": "Stat",
      "regex": "WILL_NOT_MATCH_TEXT",
      "value_type": "raw",
      "explanation": "Grants a survivability bonus to characters with high willpower.",
      "justification": "Characters with 6 or more willpower are naturally harder to remove through damage.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "lore_velocity": {
            "condition": "@card.willpower >= @lvi.highWillpowerThreshold",
            "value": "1.5",
            "explanation": "High Will Power"
          }
        }
      }
    },
    {
      "name": "Type: Item",
      "category": "Base",
      "sub_type": "Type",
      "regex": "WILL_NOT_MATCH_TEXT",
      "value_type": "raw",
      "explanation": "Applies a survivability modifier to abilities on Item cards.",
      "justification": "Items are generally harder to interact with than characters, making their abilities more reliable.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "condition": "@card.type == 'Item'",
            "value": "1.25",
            "explanation": "Items are hard to remove"
          }
        }
      }
    },
    {
      "name": "State: Can't Exert",
      "category": "State",
      "sub_type": "Control",
      "quick_description": "Characters can't exert",
      "regex": "/(all characters|characters|opponent's characters|other characters|opposing characters|chosen character) (?:can't|cannot) exert/gi",
      "value_type": "raw",
      "explanation": "The value is slightly increased to create more separation from Can't Challenge. Preventing all forms of exertion (questing, singing, etc.) is significantly more powerful than just preventing challenges.",
      "justification": "Good for tempo as it blocks any abilities that would require exerting.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "1.75"
          }
        }
      }
    },
    {
      "name": "Condition: On Banish",
      "category": "Condition",
      "sub_type": "On Banish",
      "quick_description": "other or your characters are banished",
      "regex": "/when(?:ever)? (a character of yours|one of your (other )?characters|a(n other?) character) is banished/gi",
      "value_type": "raw",
      "explanation": "this is a bit different than than a trigger on banish",
      "justification": "",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {}
      }
    },
    {
      "name": "Condition: No Cards",
      "category": "Condition",
      "sub_type": "No Cards",
      "quick_description": "",
      "regex": "/(while|if|and) you have no cards in (?:your )hand/gi",
      "value_type": "raw",
      "explanation": "This condition has a direct impact on resource dominance control as it does the opposite of generating resources. It looks for you to have no resources",
      "justification": "Having an empty hand is generally a bad position to be in. This will be offset by other abilities in the",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "-1.0",
            "explanation": "Having an empty hand is generally a bad position to be in. This will be offset by other abilities in the"
          }
        }
      }
    },
    {
      "name": "Condition: Character exerted",
      "category": "Condition",
      "sub_type": "Exerted",
      "quick_description": "characters need to be exerted",
      "regex": "/(while|if|and) (?:this character|one of your characters|all of your characters) (is|are) exerted|⟳.+—/gi",
      "value_type": "raw",
      "explanation": "Character has to be exerted",
      "justification": "Leaves your character unprotected to challenges - would be the same value as exerting an opposing character but in negative",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "-0.5",
            "explanation": "Leaves your character unprotected to challenges",
            "condition": "@card.type == 'Character'"
          }
        }
      }
    },
    {
      "name": "State: Can't play",
      "category": "State",
      "sub_type": "Control",
      "quick_description": "Can't play a type of card",
      "regex": "/opponents (?:can't|cannot) play (?:actions|songs|items|locations|characters)/gi",
      "value_type": "raw",
      "explanation": "Opponents are prevented from playing a specific type of card",
      "justification": "This affects the tempo of the game enormously",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "3.0",
            "explanation": "Affects game tempo"
          }
        }
      }
    },
    {
      "name": "Lore: Gain",
      "category": "Lore",
      "sub_type": "Direct Gain",
      "regex": "/Gain (\\d+)?(?: )?(?:◊|lore)(?! equal to)/gi",
      "value_type": "raw",
      "explanation": "Directly increases the player's lore total by a specified amount.",
      "justification": "A fundamental way to win the game.",
      "calculation": {
        "variables": [
          {
            "name": "loreAmount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "lore_velocity": {
            "value": "loreAmount * @lvi.directLoreGainMultiplier * @context.lvi.trigger",
            "explanation": "Lore Gained based on mults and triggers ->"
          }
        }
      }
    },
    {
      "name": "Lore: Lose",
      "category": "Lore",
      "sub_type": "Opponent Loss",
      "regex": "/(chosen opponent(?:s?)|each opponent) loses (\\d+) (◊|lore)/gi",
      "value_type": "raw",
      "explanation": "Causes one or more opponents to lose a specified amount of lore.",
      "justification": "This slows down the opponent's victory progression.\nThe multiplier is slightly reduced to reflect the strategic principle that proactively advancing your own win condition (Gain) is superior to reactively slowing down your opponent's (Lose).",
      "calculation": {
        "variables": [
          {
            "name": "loreAmount",
            "source": "regex",
            "group": 2,
            "type": "numeric"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "lore_velocity": {
            "value": "loreAmount * (@lvi.directLoreGainMultiplier * 0.8)",
            "explanation": "Lore: Opponent Loses (loreAmount)"
          }
        }
      }
    },
    {
      "name": "Card Effect: Draw",
      "category": "Resource",
      "sub_type": "Card Draw",
      "regex": "/(?<!Whenever you )draws?\\s+(?:until you have\\s+)?(\\d+|a|one|two|three)\\s+cards?/gi",
      "value_type": "raw",
      "explanation": "Allows the player to draw one or more cards from their deck.",
      "justification": "Card draw is the primary engine for resource advantage.",
      "calculation": {
        "variables": [
          {
            "name": "drawCount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "drawCount * @cardDrawValue * @context.rds.trigger",
            "explanation": "Draw Amount Based on triggers ->"
          }
        }
      }
    },
    {
      "name": "Card Effect: Opponent Discards",
      "category": "Resource",
      "sub_type": "Hand Disruption",
      "regex": "/(chosen opponent|each opponent) (chooses and |reveals their hand and )?discard(?:s)? (\\d+|a|one|two|three) (song|item|character|action|location)?(?: )?card(?:s?)( at random)?/gi",
      "value_type": "raw",
      "explanation": "Forces an opponent to discard one or more cards from their hand.",
      "justification": "Directly attacks the opponent's resources.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "1.5",
            "explanation": "Opponent Discards"
          }
        }
      }
    },
    {
      "name": "Card Effect: Self Discard",
      "category": "Resource",
      "sub_type": "Cost",
      "regex": "/discard (\\d+|a|one|two|three) (?:character|item|location|action|song)?(?: )?card(s?)/gi",
      "value_type": "raw",
      "explanation": "The player must discard one or more cards, usually as a cost.",
      "justification": "The penalty for discarding a card is now logically mirrored to the value of drawing a card, making the cost a -2.0 to RDS.",
      "calculation": {
        "variables": [
          {
            "name": "discardAmount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "discardAmount * -(@cardDrawValue)",
            "explanation": "opposite of drawing a card - discardAmount * -(@cardDrawValue)"
          }
        }
      }
    },
    {
      "name": "Card Effect: Look at Deck",
      "category": "Resource",
      "sub_type": "Scry",
      "regex": "/Look at the top (\\d+|one|two|three|four|five)?(?: )?card(?:s?) of your deck/gi",
      "value_type": "raw",
      "explanation": "Allows the player to look at the top cards of their deck to gain information and potentially organize them.",
      "justification": "Provides card selection and filters draws.",
      "calculation": {
        "variables": [
          {
            "name": "lookCount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "lookCount * @dqi.perCardLookedAt",
            "explanation": "Scry Effect : (Deck Quality Improvement DQI)"
          }
        }
      }
    },
    {
      "name": "Card Effect: Tutor",
      "category": "Resource",
      "sub_type": "Tutor",
      "regex": "/Search your deck for .*? card/gi",
      "value_type": "raw",
      "explanation": "A powerful form of card selection where a player looks at cards from their deck, puts them into their hand",
      "justification": "This is a direct tutor effect, guaranteeing the player gets a useful card. It is the single most effective way of getting the card you want.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "3.5",
            "explanation": "You get that exact card that you want"
          }
        }
      }
    },
    {
      "name": "Card Effect: Filter to Bottom",
      "category": "Resource",
      "sub_type": "Filter",
      "regex": "/bottom of (your|the) deck/gi",
      "value_type": "raw",
      "explanation": "After looking at cards from the top of the deck, the player puts the unwanted cards on the bottom. (You lose a card, but with the slim theoretical possibility of getting it back after a shuffle, making it the least severe of the three major costs).",
      "justification": "Improves the quality of future draws.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "-1.0"
          }
        }
      }
    },
    {
      "name": "Card Effect: Discard to Hand",
      "category": "Resource",
      "sub_type": "Recursion",
      "regex": "/return (a|another|an|up to \\d+) (?:character|item|action|song|card)(?: card(?:s)?)?(?: with \\d+ (?:¤|⬡|⛉) or (?:less|more))? from your discard (?:pile )?to your hand/gi",
      "value_type": "raw",
      "explanation": "Allows a player to return a card from their discard pile to their hand.",
      "justification": "This is a form of card advantage, as it recovers a spent resource.",
      "calculation": {
        "variables": [
          {
            "name": "drawCount",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "3.0 * drawCount * @context.rds.trigger",
            "explanation": "Discard to Hand 3 * drawCount "
          }
        }
      }
    },
    {
      "name": "Card Effect: Discard to Deck",
      "category": "Resource",
      "sub_type": "Recursion",
      "regex": "shuffle (\\d+|a|one|two|three|all|chosen)(.*?)? card(s?) from your discard into your deck",
      "value_type": "raw",
      "explanation": "Shuffles cards from the discard pile back into the deck.",
      "justification": "Prevents decking out and allows for reuse of key cards. Potentially doesn't do much",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "0.25",
            "explanation": "Some value but potentially does not much"
          }
        }
      }
    },
    {
      "name": "Card Effect: Look at Opponent's Hand",
      "category": "Resource",
      "sub_type": "Information",
      "regex": "/(look at (chosen|each) opponent's hand|chosen opponent reveals their hand)/gi",
      "value_type": "raw",
      "explanation": "The player gets to see the cards in an opponent's hand.",
      "justification": "Provides valuable information for strategic planning.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "0.5",
            "explanation": "Information is power"
          }
        }
      }
    },
    {
      "name": "Card Effect: Hand to Inkwell",
      "category": "Resource",
      "sub_type": "Ramp",
      "regex": "/put (a|an additional|the top|any|chosen)(?: character| item | location| action| song| item or location)?(?: card)? (?:from your discard|from your hand|of your deck)?(?: )?into (your|its player's) inkwell( facedown)?( and exerted)?/gi",
      "value_type": "raw",
      "explanation": "Allows a player to place a card into their inkwell, accelerating their ink resources.",
      "justification": "Directly accelerates resources (ramp), which is a powerful effect.\n25% better than just drawing a random card",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "@cardDrawValue * 1.25",
            "explanation": "Hand to Inkwell - permanent gain "
          }
        }
      }
    },
    {
      "name": "Bounce: Opposing Character",
      "category": "Board Control",
      "sub_type": "Tempo",
      "regex": "/Return chosen (?:opposing |opponent's )?(?:exerted )?(character|item|location|character or item|character, item or location)(?: with (?:cost )?\\d+ (?:¤|⬡|⛉| )?or (?:less|more))? to (its|their|the) player's hand/gi",
      "value_type": "raw",
      "explanation": "Returns an opponent's card from the board to their hand.",
      "justification": "A tempo-positive play that removes a threat from the board.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "3.5",
            "explanation": "Bounce Opposing Character"
          }
        }
      }
    },
    {
      "name": "Add to Inkwell: Opposing Character",
      "category": "Board Control",
      "sub_type": "Removal",
      "regex": "/(put|add|move) chosen (?:opposing |opponent's )?(?:exerted )?(character|item|location|character or item|character, item or location)(?: with \\d+ (?:¤|⬡|⛉) or (?:less|more))? into (its|their|the) player's inkwell/gi",
      "value_type": "raw",
      "explanation": "Moves an opponent's card from the board into their inkwell.",
      "justification": "A powerful form of removal that also ramps the opponent.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "@bcr.banishCharacterValue * 0.93",
            "explanation": "Add opposing character to inkwell"
          }
        }
      }
    },
    {
      "name": "Banish: Chosen Target",
      "category": "Board Control",
      "sub_type": "Targeted Removal",
      "regex": "/banish chosen (?:opposing |opponent's )?(?:damaged )?(character(?:s)?|item|location|character or item|character, item or location)(?! of yours)(?: with \\d+ (?:¤|⬡|⛉) or (?:less|more))?/gi",
      "value_type": "raw",
      "explanation": "Permanently removes a chosen opponent's card from play.",
      "justification": "The most definitive form of single-target removal.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "@bcr.banishCharacterValue * 1.0 * @context.bcr.trigger",
            "explanation": "Banish Other Characters"
          }
        }
      }
    },
    {
      "name": "Banish: All Characters",
      "category": "Board Control",
      "sub_type": "Board Wipe",
      "regex": "/Banish all (opposing )?(ready |damaged )?characters(?: with \\d+ (?:¤|⬡|⛉) or (?:less|more))?/gi",
      "value_type": "raw",
      "explanation": "Permanently removes all characters from the board.",
      "justification": "The most powerful board control effect, resetting the board state.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "@bcr.banishCharacterValue * 1.15",
            "explanation": "Banish All"
          }
        }
      }
    },
    {
      "name": "Banish: Opponent's Choice",
      "category": "Board Control",
      "sub_type": "Removal",
      "regex": "/((?:An|Each) opponent chooses and banishes one of their characters)/gi",
      "value_type": "raw",
      "explanation": "The opponent chooses one of their own characters to banish.",
      "justification": "Powerful removal, but weaker than choosing the target yourself.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "@bcr.banishCharacterValue * 0.85 * @context.bcr.trigger",
            "explanation": "Banish Other Characters"
          }
        }
      }
    },
    {
      "name": "Banish: As a Cost/Choice",
      "category": "Board Control",
      "sub_type": "Cost",
      "regex": "/(?:You may)? banish (?:this |one of your|chosen) (characters?|items?|locations?)(?: of yours)?/gi",
      "value_type": "net_advantage",
      "explanation": "The player may choose to banish one of their own characters to trigger an effect.",
      "justification": "The cost of banishing a character on your board.",
      "calculation": {
        "variables": [
          {
            "name": "cardType",
            "source": "regex",
            "group": 1,
            "type": "string"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "(@cardType === 'character' ? @bcr.banishCharacterValue : @cardType === 'item' ? @bcr.banishItemValue : @cardType === 'location' ? @bcr.banishLocationValue : -99 ) * -0.2 * @context.bcr.trigger",
            "explanation": "This negative value will be offset by the upside of a depending ability on this card"
          }
        }
      }
    },
    {
      "name": "Damage: Deal to One",
      "category": "Board Control",
      "sub_type": "Direct Damage",
      "regex": "/(Deal|move)(?: up to)? (\\d+)?(:? )?damage( counters?)?( from (chosen|another|another chosen)?( character| location| character or location)?( of yours)?)? to (chosen|another|another chosen) (?:opposing )?(character|location|character or location)(?! of yours)(?: with \\d+ (?:¤|⬡|⛉) or (?:less|more))?/gi",
      "value_type": "raw",
      "explanation": "Deals a specified amount of damage to a single opposing card.",
      "justification": "A flexible form of removal that can banish weakened cards.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "4.0 * @context.bcr.trigger",
            "explanation": "Deal Damage"
          }
        }
      }
    },
    {
      "name": "Damage: Put Damage Counters",
      "category": "Board Control",
      "sub_type": "Direct Damage",
      "regex": "/(put .*? damage counter(s?) on .*? character)/gi",
      "value_type": "raw",
      "explanation": "Places a number of damage counters on a character.",
      "justification": "Similar to dealing damage, this can remove or weaken characters.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "4.5 * @context.bcr.trigger",
            "explanation": "Put Damage Counters"
          }
        }
      }
    },
    {
      "name": "Damage: Deal to Many",
      "category": "Board Control",
      "sub_type": "Area of Effect",
      "regex": "/(Deal|move)( up to)? (\\d+) damage( counter(s)?)? to each opposing (character|location)/gi",
      "value_type": "raw",
      "explanation": "Deals damage to all opposing characters or locations.",
      "justification": "An area-of-effect (AoE) ability that can control wide boards.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "4.0",
            "explanation": "Deal Damage to multiple characters"
          }
        }
      }
    },
    {
      "name": "Damage: Deal Divided",
      "category": "Board Control",
      "sub_type": "Flexible Damage",
      "regex": "/(Deal|move) (\\d+) damage divided as you choose among any number of chosen opposing characters/gi",
      "value_type": "raw",
      "explanation": "Deals a total amount of damage that can be split among multiple targets.",
      "justification": "A very flexible form of removal.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "4.0 * @context.bcr.trigger",
            "explanation": "Deal Damage"
          }
        }
      }
    },
    {
      "name": "Damage: Heal",
      "category": "Lore",
      "sub_type": "Survivability",
      "regex": "/Remove(?: up to)? (\\d+) damage from (?:chosen |each of your |one of your )?(?:character(?:s)?|location)/gi",
      "value_type": "raw",
      "explanation": "Removes damage from one of your cards, increasing its survivability.",
      "justification": "Increases the longevity of your characters.",
      "calculation": {
        "variables": [
          {
            "name": "healAmount",
            "source": "regex",
            "group": 1,
            "type": "numeric"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "lore_velocity": {
            "value": "healAmount * @lvi.healValueMultiplier * @context.lvi.trigger",
            "explanation": "Damage: Heal (healAmount)"
          }
        }
      }
    },
    {
      "name": "Damage: Deal to Self",
      "category": "Board Control",
      "sub_type": "Cost",
      "regex": "/(?:Deal|move)(?: up to)? (\\d+)?(:? )?damage( counters)?( from (chosen|another|another chosen)?( character| location| character or location)?( of yours)?)? to (chosen|another|another chosen) (?:opposing )?(character|location|character or location)( of yours)(?: with \\d+ (?:¤|⬡|⛉) or (?:less|more))?/gi",
      "value_type": "raw",
      "explanation": "One of your own cards takes damage, usually as a cost or effect.",
      "justification": "Has potential to remove one of your characters.",
      "calculation": {
        "variables": [
          {
            "name": "damageAmount",
            "source": "regex",
            "group": "1",
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "-1.25 * damageAmount * @context.bcr.trigger",
            "explanation": "Negative Impact"
          }
        }
      }
    },
    {
      "name": "State: Ready Character",
      "category": "State",
      "sub_type": "Action",
      "regex": "/Ready (chosen|this)? (?:your |another )?(character|item)/gi",
      "value_type": "raw",
      "explanation": "Readies one of your exerted characters.",
      "justification": "Enables action advantage.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "lore_velocity": {
            "value": "@lvi.readyCharacterValue * @context.lvi.trigger",
            "explanation": "Ready Chosen Character * LVI Trigger"
          }
        }
      }
    },
    {
      "name": "State: Exert Character",
      "category": "State",
      "sub_type": "Control",
      "regex": "/Exert chosen (?:opposing |opponent's )?(character|item)(?: with \\d+ (?:¤|⬡|⛉) or (?:less|more))?/gi",
      "value_type": "raw",
      "explanation": "Significant tempo advantage gained by neutralizing a character for a turn, preventing questing, challenging, or singing. And leaving him open to challenges.",
      "justification": "Tempo advantage gained by neutralizing a character for a turn, Leaving him open to challenges.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "2.5",
            "explanation": "Exert Character"
          }
        }
      }
    },
    {
      "name": "State: Prevent Readying",
      "category": "State",
      "sub_type": "Control",
      "regex": "/chosen (?:opposing )?character can't ready at the start of (?:their|your) next turn/gi",
      "value_type": "raw",
      "explanation": "Prevents an opponent's character from readying.",
      "justification": "A stronger form of soft removal.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "1.1 * @context.bcr.trigger",
            "explanation": "Affects Tempo"
          }
        }
      }
    },
    {
      "name": "Movement: To Location",
      "category": "Movement",
      "sub_type": "Action",
      "regex": "/move (?:one of )?your characters to a location for free/gi",
      "value_type": "raw",
      "explanation": "Allows a character to move to a location without paying the move cost.",
      "justification": "Provides tempo and action efficiency.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {}
      }
    },
    {
      "name": "Stat: Strength Buff",
      "category": "Stat",
      "sub_type": "Buff",
      "regex": "/(?:all characters )?(?:get|gets|has|chosen character(?:s)?) \\+(\\d+) (¤|strength)/gi",
      "value_type": "raw",
      "explanation": "Increases the Strength of one or more characters.",
      "justification": "Makes characters better in challenges.",
      "calculation": {
        "variables": [
          {
            "name": "strengthAmount",
            "source": "regex",
            "group": 1,
            "type": "numeric"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "strengthAmount * @bcr.statBuffMultiplier * @context.bcr.trigger",
            "explanation": "Strength Buff -> "
          }
        }
      }
    },
    {
      "name": "Stat: Strength Debuff",
      "category": "Stat",
      "sub_type": "Debuff",
      "regex": "/(?:all characters )?(?:get|gets|has|chosen character(?:s)?) -(\\d+) (¤|strength)/gi",
      "value_type": "raw",
      "explanation": "Decreases the Strength of one or more characters.",
      "justification": "Makes opposing characters weaker in challenges.",
      "calculation": {
        "variables": [
          {
            "name": "strengthAmount",
            "source": "regex",
            "group": 1,
            "type": "numeric"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "strengthAmount * @bcr.statBuffMultiplier * @context.bcr.trigger",
            "explanation": "Strength Debuff -> "
          }
        }
      }
    },
    {
      "name": "Stat: Willpower Buff",
      "category": "Stat",
      "sub_type": "Buff",
      "regex": "/(?:all characters )?(?:get|gets|has|chosen character(?:s)?) \\+(\\d+) (⛉|Willpower)/gi",
      "value_type": "raw",
      "explanation": "Increases the Willpower of one or more characters.",
      "justification": "Increases survivability against damage.",
      "calculation": {
        "variables": [
          {
            "name": "willpowerAmount",
            "source": "regex",
            "group": 1,
            "type": "numeric"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "willpowerAmount * @bcr.statBuffMultiplier * @context.bcr.trigger",
            "explanation": "Willpower Buff -> "
          }
        }
      }
    },
    {
      "name": "Stat: Cost Reduction",
      "category": "Stat",
      "sub_type": "Ramp",
      "regex": "/pay (\\d+) ⬡ less/gi",
      "value_type": "raw",
      "explanation": "Reduces the ink cost to play certain cards.",
      "justification": "A form of resource advantage.",
      "calculation": {
        "variables": [
          {
            "name": "costReduction",
            "source": "regex",
            "group": 1,
            "type": "textOrNumber"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "0.25 * @costReduction * @context.rds.trigger",
            "explanation": "Cost Reduction -> "
          }
        }
      }
    },
    {
      "name": "Play: From Discard",
      "category": "Play",
      "sub_type": "Recursion",
      "regex": "/You may play a (character|item) card(?: with \\d+ (?:¤|⬡|⛉) or (?:less|more))? from your discard/gi",
      "value_type": "raw",
      "explanation": "Allows the player to play a card directly from their discard pile.",
      "justification": "A powerful form of card advantage.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "1.5 * @context.rds.trigger",
            "explanation": "Play from Discard"
          }
        }
      }
    },
    {
      "name": "Play: For Free",
      "category": "Play",
      "sub_type": "Cheat",
      "regex": "/(?:You may)? play (a|this|an) (character|item|location|action|song|card)(?: card)? (?:with cost (\\d+) or less )?for free/gi",
      "value_type": "net_advantage",
      "explanation": "Allows the player to play a card without paying its ink cost.",
      "justification": "A massive tempo and resource advantage.",
      "calculation": {
        "variables": [
          {
            "name": "maxCost",
            "source": "regex",
            "type": "textOrNumber",
            "group": "3"
          },
          {
            "name": "cardType",
            "source": "regex",
            "type": "string",
            "group": "2"
          },
          {
            "name": "thisCard",
            "source": "regex",
            "group": 1,
            "type": "string"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "condition": "",
            "value": "(@thisCard === 'this' ? @card.cost : maxCost) * @context.rds.trigger",
            "explanation": "Play for Free"
          }
        }
      }
    },
    {
      "name": "Trigger: On Play",
      "category": "Trigger",
      "sub_type": "On Play",
      "regex": "/When you play this (?:character|item|action|location|song)/gi",
      "value_type": "raw",
      "explanation": "This ability triggers when the card itself is played.",
      "justification": "Trigger: On Play Best as it's guaranteed and immediate effect",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "2.0"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: On Quest",
      "category": "Trigger",
      "sub_type": "On Quest",
      "regex": "/Whenever (this character|he|she|it) quests/gi",
      "value_type": "raw",
      "explanation": "This ability triggers whenever this character quests.",
      "justification": "Trigger: On Quest Provides value for performing the primary lore-gaining action. But it has to survive",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.25"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Trigger: On Banish (Self)",
      "category": "Trigger",
      "sub_type": "On Banish",
      "regex": "/When(?:ever)? (this character|he|she|it) is banished(?! in a challenge)/gi",
      "value_type": "raw",
      "explanation": "This ability triggers when this character is banished.",
      "justification": "Trigger: On Banish Better than Quest but worst than On Play or Leaves Play triggers",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "all",
            "name": "trigger",
            "operation": "multiply",
            "value": "1.5"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Keyword: Evasive",
      "category": "Keyword",
      "sub_type": "Defensive",
      "regex": "/\\b(Evasive)\\b/gi",
      "value_type": "raw",
      "explanation": "This character can only be challenged by other characters with Evasive.",
      "justification": "Evasive provides significant protection from challenges.",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "lvi",
            "name": "questSafety",
            "operation": "multiply",
            "value": "@lvi.evasiveModifier"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Keyword: Rush",
      "category": "Keyword",
      "sub_type": "Offensive",
      "regex": "/\\b(Rush)\\b/gi",
      "value_type": "raw",
      "explanation": "Allows a character to challenge the turn it is played.",
      "justification": "Rush provides immediate board impact.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "board_control": {
            "value": "@card.strength * @bcr.rushStrengthMultiplier",
            "explanation": "Rush"
          }
        }
      }
    },
    {
      "name": "Keyword: Ward",
      "category": "Keyword",
      "sub_type": "Defensive",
      "regex": "/\\b(Ward)\\b/gi",
      "value_type": "raw",
      "explanation": "Opponents can't choose this character except to challenge.",
      "justification": "Ward provides protection from targeted abilities.",
      "calculation": {
        "variables": [],
        "contextModifiers": [
          {
            "targetMetric": "lvi",
            "name": "survivability",
            "operation": "multiply",
            "value": "@lvi.wardModifier"
          }
        ],
        "scores": {}
      }
    },
    {
      "name": "Keyword: Resist",
      "category": "Keyword",
      "sub_type": "Defensive",
      "regex": "/Resist \\+(\\d+)/gi",
      "value_type": "raw",
      "explanation": "Reduces damage taken by this character by a specified amount.",
      "justification": "Increases survivability against damage. As well as improving Board Control",
      "calculation": {
        "variables": [
          {
            "name": "resistAmount",
            "source": "regex",
            "group": 1,
            "type": "numeric"
          }
        ],
        "contextModifiers": [
          {
            "targetMetric": "lvi",
            "name": "survivability",
            "operation": "multiply",
            "value": "@lvi.resistModifier"
          }
        ],
        "scores": {
          "board_control": {
            "value": "resistAmount",
            "explanation": "Resist Amount"
          }
        }
      }
    },
    {
      "name": "Keyword: Singer",
      "category": "Keyword",
      "sub_type": "Tempo",
      "regex": "/\\bSinger (\\d+)\\b/gi",
      "value_type": "net_advantage",
      "explanation": "This character can exert to sing a song of a certain cost or less for free.",
      "justification": "A form of resource ramp for playing song cards.",
      "calculation": {
        "variables": [
          {
            "name": "singerValue",
            "source": "regex",
            "group": 1,
            "type": "numeric"
          }
        ],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "singerValue - @card.cost",
            "explanation": "Net ink advantage"
          }
        }
      }
    },
    {
      "name": "Play: Song",
      "category": "Play",
      "sub_type": "Song",
      "regex": "/\\(A character with cost (\\d+) or more can ⟳ to sing this song for free\\.\\)/gi",
      "value_type": "raw",
      "explanation": "The reminder text for songs, indicating they can be played for free by exerting a character of sufficient cost.",
      "justification": "This is the core mechanic of song cards, providing resource advantage.",
      "calculation": {
        "variables": [],
        "contextModifiers": [],
        "scores": {
          "resource_dominance": {
            "value": "1.5",
            "explanation": "Cost Reduction"
          }
        }
      }
    }
  ]
}